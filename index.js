// Generated by CoffeeScript 1.6.3
var DeferredObject, Q;

Q = require('q');

module.exports = DeferredObject = (function() {
  function DeferredObject(data) {
    var k, v, _ref;
    this.data = data;
    _ref = this.data;
    for (k in _ref) {
      v = _ref[k];
      this.__defineGetter__(k, function() {
        return this.data[k];
      });
    }
  }

  DeferredObject.prototype.defer = function(key, getter) {
    var _this = this;
    return this.__defineGetter__(key, function() {
      var defer;
      if (_this.data[key]) {
        return _this.data[key];
      }
      defer = Q.defer();
      getter(_this.data, function(err, result) {
        if (err) {
          return defer.resolve([err]);
        }
        _this.data[key] = result;
        return defer.resolve([null, result]);
      });
      throw defer.promise;
    });
  };

  DeferredObject.prototype.get = function(key, callback) {
    return this["eval"]("this." + key, callback);
  };

  DeferredObject.prototype["eval"] = function(str, callback) {
    var err,
      _this = this;
    try {
      return callback(null, eval(str));
    } catch (_error) {
      err = _error;
      if (err.then == null) {
        err.then = function() {
          return callback(err);
        };
      }
      return err.then(function(arg) {
        var result;
        err = arg[0], result = arg[1];
        if (err) {
          return callback(err);
        }
        return _this["eval"](str, callback);
      });
    }
  };

  return DeferredObject;

})();

/*
//@ sourceMappingURL=index.map
*/
